// Code generated for package migrations by go-bindata DO NOT EDIT. (@generated)
// sources:
// mysql/000001_create_teams.down.sql
// mysql/000001_create_teams.up.sql
// mysql/000002_create_team_members.down.sql
// mysql/000002_create_team_members.up.sql
// postgres/000001_create_teams.down.sql
// postgres/000001_create_teams.up.sql
// postgres/000002_create_team_members.down.sql
// postgres/000002_create_team_members.up.sql
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mysql000001_create_teamsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x91\x5f\x6b\xb3\x30\x18\xc5\xef\xf3\x29\x9e\x3b\xf5\xe5\x65\x6c\xd7\xd2\xb1\x54\x1f\x69\x20\x9a\x92\x44\xd6\xbb\x92\xd9\x8c\x09\x1a\x45\xb3\x3f\x1f\x7f\xb4\x4a\xd9\xda\xdd\x14\x06\x83\xb1\x5c\x84\x40\xce\x39\x39\x4f\x7e\x0a\x35\xdc\xf5\x83\xed\xcd\x60\x77\xca\x1b\x6f\x5b\xeb\x3c\x2c\x20\x54\xc8\x31\xd1\xc0\xb2\x90\x00\x00\x4c\xfb\x7e\xcd\x17\x89\x28\x0b\x1d\xfe\x8b\x20\x93\x22\x07\x56\x64\x42\xe6\x54\x33\x51\x6c\x55\xb2\xc2\x9c\x5e\x25\x82\x97\x79\xa1\x8e\xbe\xfb\x15\x4a\x04\x6f\x1e\x1a\xbb\x75\xa6\xb5\xb0\x80\x40\x5b\xd3\x8e\xc1\x51\x42\x8b\x74\x16\x8c\xd5\x93\x6d\x0d\x2c\x20\xa5\x9a\x2e\xa9\xc2\x30\xfa\xa4\xaa\xba\xe6\xb9\x75\xc7\x1c\xda\x34\xdd\xab\xe8\xad\x63\xee\xa5\xf6\x76\x4a\x8c\xe0\x16\xae\xff\x1f\x8e\x01\xe5\x1a\x25\x68\xba\xe4\x08\x87\x47\x21\x95\x62\x0d\x53\x47\x38\xb1\xc7\xc1\xec\x9a\x47\xbd\x09\x48\x14\xc5\x84\xac\x25\xae\xa9\x44\x30\x8d\xb7\x03\x7b\xc4\xb7\x7a\xf4\xe3\x34\xff\xf9\x1f\xc6\x04\x37\x98\x94\xfa\x44\x1e\x93\x14\x29\xe7\x22\xa1\x1a\xe1\xcb\xc0\x98\x90\x5f\x42\x85\x9b\xd1\xef\xb3\x58\xd5\xb9\xb2\xdf\x99\xcb\xc1\x9c\x27\xfc\xb1\xf9\x1e\x36\xa9\x1d\xab\xa1\xee\x7d\xdd\xb9\x4b\xa1\x7c\xb0\xfe\x38\x8d\x43\xaf\xa9\x28\xcb\x00\x37\x4c\x69\x35\x55\x8e\xc9\x7b\x00\x00\x00\xff\xff\x2a\x38\xc9\x68\xdc\x04\x00\x00")

func mysql000001_create_teamsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000001_create_teamsDownSql,
		"mysql/000001_create_teams.down.sql",
	)
}

func mysql000001_create_teamsDownSql() (*asset, error) {
	bytes, err := mysql000001_create_teamsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000001_create_teams.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql000001_create_teamsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\xd1\x6f\x9b\x3e\x10\xc7\xdf\xf9\x2b\xee\x2d\xf0\xd3\x4f\x53\x9b\xb5\x55\xa5\x28\xd3\x5c\xb8\xac\xd6\x88\xe9\xc0\x68\xed\x53\xe4\x80\xbb\x5a\x02\x83\xc0\xed\xda\xff\x7e\x8a\x21\x2c\x6b\xe8\x16\x75\x0f\x93\xa6\xbd\x20\xc1\x7d\x7c\xba\xbb\xef\xd7\x87\x1f\x23\xe1\x08\x9c\x5c\x84\x08\x74\x01\x2c\xe2\x80\xd7\x34\xe1\x09\x70\x29\xca\x16\x5c\x07\x00\x80\xe6\xf0\x20\x9a\xec\x4e\x34\xee\xf4\xcc\xb3\x14\x4b\xc3\xf0\x7f\x1b\xf4\x1b\x29\x8c\x24\x06\xd6\xea\x8b\xd2\xc6\x9d\x1e\x79\x10\xe0\x82\xa4\xe1\x2e\x95\xd6\xf9\x01\x54\x20\x0b\x79\x00\xa5\xda\xba\x10\x4f\x4c\x94\x72\xa8\xeb\xec\x64\x8c\x3c\x00\x09\x64\x9b\x35\xaa\x36\xaa\xd2\xdf\x9b\x3c\x3d\x1d\x43\xb1\x14\xaa\x18\xa0\xe3\xe9\xf9\x18\xc4\x9f\x6a\xf9\xab\x44\x7e\x55\xd6\x42\x1f\xd2\x00\x29\x8a\xea\xab\xcc\x83\xaa\x14\x4a\xb7\x60\xe4\xa3\xe9\x02\x54\x3f\x28\x23\x77\x84\x79\x3b\x1d\x3b\x9f\x64\x77\xb2\x94\xcf\xf4\xdb\xc7\xae\x62\xba\x24\xf1\x0d\x7c\xc4\x1b\x70\x69\xee\xf5\x9a\x31\xfa\x29\x45\xfb\xd1\x96\xea\x6e\x9e\x7d\x6c\xf3\x51\xe5\x8f\x2b\xb3\xb1\xc9\x4a\xff\x3c\xac\x6c\xb1\x2b\x95\x83\xbb\xad\x7b\x94\xbb\xb7\x26\x59\x09\x03\xee\xd6\x2f\xa3\x5c\x66\x2d\x67\xb9\xad\xfb\x46\xb9\xdc\xda\xc9\x72\x5b\x67\x8d\x72\xad\x9d\x92\xad\x6f\x3b\x30\xcf\xf1\x00\xd9\x07\xca\x70\x4e\xb5\xae\x82\x8b\x61\x6a\xfe\x25\x89\x13\xe4\xf3\x7b\x73\x7b\x5e\xae\x4f\x66\x8e\x93\x20\x87\xf7\x75\x23\x6b\xd1\xc8\x3c\x31\xc2\xc8\x52\x6a\x03\x73\x70\x13\x0c\xd1\xe7\x40\x17\xdd\x3d\xea\x9e\x56\x97\x2e\xe0\x47\x29\xe3\xee\x7f\x1e\x2c\xe2\x68\x09\x94\x2d\xa2\x78\x49\x38\x8d\xd8\x2a\xf1\x2f\x71\x49\xde\xf8\x51\x98\x2e\x59\x32\x9c\xfb\x7c\x89\x31\x82\x11\xeb\x42\x76\x43\x9f\xc3\xc4\xde\xd4\xc9\x80\x10\x16\xf4\x80\x6d\x4b\xc0\x1c\x02\xc2\xc9\x05\x49\xd0\xf5\x7e\xa0\xb2\xaa\xb8\x2f\xf5\x90\xc7\x7a\x2d\xaa\xa5\xee\x34\xea\x32\x7a\xf0\x0e\x8e\xba\x99\x4d\xfa\xa2\x8f\x27\xfd\x3b\x09\x39\xc6\xfd\xf2\xe8\xd6\x05\x09\x02\x78\x96\x06\xd6\x55\x55\xcc\x26\x8e\xe7\xcd\x1c\xe7\x2a\xc6\x2b\x12\x23\x88\xc2\xc8\x86\xde\xb2\xca\xe0\xa3\x6a\x4d\xdb\xf5\xbf\x3f\xc3\x99\x83\xd7\xe8\xa7\x7c\xff\xc4\xcc\x09\x90\x84\x61\xe4\x6f\xf6\xd7\x4b\x69\xff\x1e\x6d\x42\xd1\x9a\x4d\x2e\x9a\x55\xba\xbb\x1a\xaf\x95\x67\x3f\x53\xbf\x6c\xff\x69\xf4\x9b\x1a\xed\xfc\x49\x5e\x2b\xce\x4b\x3f\xa3\x3f\xa6\xcd\xb7\x00\x00\x00\xff\xff\x20\xd4\x63\xf3\x21\x08\x00\x00")

func mysql000001_create_teamsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000001_create_teamsUpSql,
		"mysql/000001_create_teams.up.sql",
	)
}

func mysql000001_create_teamsUpSql() (*asset, error) {
	bytes, err := mysql000001_create_teamsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000001_create_teams.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql000002_create_team_membersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x93\x51\x4b\xc3\x30\x14\x85\xdf\xf3\x2b\xee\x5b\x5b\x19\xa2\xcf\x65\x62\xd6\xde\xba\x42\xdb\x8c\x24\xc5\xbd\x8d\x6c\xbb\xe2\xa0\xa9\xa3\xcd\xc0\x9f\x2f\x6b\xeb\x9c\xce\x27\x27\x08\xb2\x3e\x94\x40\xce\x39\x39\xb9\x1f\x51\xa8\xe1\x7e\xdb\xd0\xd6\x34\xb4\x56\xce\x38\xb2\x54\x3b\x18\x83\xaf\x30\xc3\x48\x43\x9a\xf8\x0c\x00\xa0\xff\xef\xbf\x61\x23\x12\x65\xa1\xfd\xab\x00\x12\x29\x72\x48\x8b\x44\xc8\x9c\xeb\x54\x14\x0b\x15\x4d\x31\xe7\xd7\x91\xc8\xca\xbc\x50\x07\xdf\xe3\x14\x25\x82\x33\xcb\x8a\x16\xb5\xb1\x04\x63\xf0\x34\x19\x9b\x93\x5d\x52\xd3\x7a\x07\x21\x2f\xe2\x41\xd6\xae\x9e\xc9\x1a\x18\x43\xcc\x35\x9f\x70\x85\x7e\xf0\x49\xb5\x7a\xa9\x76\xb6\x3e\xa4\xa9\xbd\x9c\xca\x96\x9a\x3e\x2c\x80\x3b\xb8\x19\x75\x4b\x8f\x67\x1a\x25\x68\x3e\xc9\x10\x8e\x4e\x85\x58\x8a\x19\xf4\x55\xe1\xc3\x1f\x7a\x83\x6d\xb8\xec\xad\xc7\x82\x20\x64\x6c\x26\x71\xc6\x25\x82\xa9\x1c\x35\xe9\x13\xbe\x6e\x5a\xd7\xf6\x13\x38\x9d\x62\xc8\x70\x8e\x51\xa9\xbf\xc8\x43\x16\x23\xcf\x32\x11\x71\x8d\xf0\x6d\x60\xc8\xd8\x3f\xe4\xc2\xd7\x76\x53\x9f\x03\xa6\x0b\x38\x25\x33\xba\xa0\x39\x17\xcd\xc3\x8e\x5a\x77\x0e\x9a\x2e\xe0\xf2\x68\x7e\x93\x4c\x4c\x15\x39\xe2\x3f\xc4\xf2\xee\xfe\x73\x26\x5d\xa9\xbe\x6b\x9a\x00\xce\x53\xa5\xd5\x71\xeb\x90\xbd\x05\x00\x00\xff\xff\xd8\xc4\x54\x61\x83\x06\x00\x00")

func mysql000002_create_team_membersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000002_create_team_membersDownSql,
		"mysql/000002_create_team_members.down.sql",
	)
}

func mysql000002_create_team_membersDownSql() (*asset, error) {
	bytes, err := mysql000002_create_team_membersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000002_create_team_members.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql000002_create_team_membersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\x5f\x6b\xdb\x30\x14\xc5\xdf\xfd\x29\xee\x5b\xac\x51\x46\x57\x4a\x19\x84\x8c\x29\xf6\x4d\x23\x66\xcb\x41\x92\x59\xfb\x14\x94\xf8\x76\x35\x58\x4e\xb1\x95\xd1\x7d\xfb\xe1\x3f\xc9\x3a\xba\x75\x0f\xeb\xd8\x28\xf3\x83\xb1\x75\x8f\x8e\x2e\xe7\x77\xb1\x23\x85\xdc\x20\x18\x3e\x4f\x10\xc4\x02\x64\x66\x00\xaf\x84\x36\x1a\x0c\x59\x97\x92\xdb\x50\xd3\x42\x18\x00\x40\xbf\x22\x0a\xf8\x6c\x9b\xed\xad\x6d\xc2\xb3\x0b\xd6\xeb\x65\x9e\x24\x27\xbd\x20\x6f\xa9\x79\x52\xa0\x76\x15\xb5\xc7\xfa\xc5\x39\x1b\x96\x63\xaa\xc8\x13\xf7\xb0\x29\x3f\x95\xb5\x0f\xcf\x4e\xc7\xc2\x4a\x89\x94\xab\x6b\xf8\x80\xd7\x10\x0e\xc7\x9f\x8c\xa7\x8c\x8a\xae\x52\x16\xf7\x6b\x4f\xd6\xb9\xa1\xdb\xfe\x79\x5d\x16\x87\x1d\x4f\x28\xf7\x2d\x35\xbd\xf2\x97\x9e\x45\xdf\xe2\xda\x7a\x08\x0f\xdd\xb2\x80\x01\xca\x4b\x21\x71\x26\xea\x7a\x17\xcf\x21\xc6\x05\xcf\x13\x03\xd1\x92\x2b\x8d\x66\xb6\xf7\x37\x6f\xdd\xe6\x7c\x1a\x04\x1a\x0d\xbc\xbf\x6b\xe8\xce\x36\x54\x68\x6f\x3d\x39\xaa\x3d\xcc\x20\xd4\x98\x60\x64\x40\x2c\x86\x8c\x87\x7b\x77\x8d\x85\x28\xcb\xa5\x09\x5f\x31\x58\xa8\x2c\x05\x21\x17\x99\x4a\xb9\x11\x99\x5c\xeb\x68\x89\x29\x7f\x1d\x65\x49\x9e\x4a\x7d\xdc\xf7\x71\x89\x0a\xc1\xdb\x4d\x45\xeb\xda\x3a\x82\x19\x4c\x1e\xb0\x9c\x1c\x85\x5c\xc6\xa3\xac\xdd\xde\x92\xb3\x30\x83\x98\x1b\x3e\xe7\x1a\x43\xf6\x9d\x6a\xbb\xab\xf6\xae\x3e\xba\xe9\x4e\x4e\x5d\x64\x83\x19\x83\x77\x70\x3a\x44\x37\x19\xbb\x7e\x33\x19\xdf\x79\x62\x50\x8d\xf3\xf5\x70\xa2\x78\x1c\xc3\x37\x1f\xf0\x65\xfd\xa5\x23\x7f\xce\xa6\x93\x80\xb1\x69\x10\xac\x14\xae\xb8\x42\xb0\x95\xa7\x46\xdc\xc8\x9d\xc7\xfb\xb2\xf5\xed\x90\xc3\xe3\x2c\xa7\x01\x5e\x61\x94\x9b\xc7\x3b\xa6\x41\x8c\x3c\x49\xb2\xa8\x9b\xf4\x9f\xd9\xbe\x4c\x46\xbc\x70\x65\xfd\x1c\x90\x7a\xa3\xff\x94\xfe\x0c\xa5\xcb\x3d\xb5\xfe\x39\x28\xf5\x46\xff\x04\xa5\x97\x85\xe9\xf0\xc5\xff\x3d\x46\x3f\xf8\xcb\xfd\x35\x40\x5f\x03\x00\x00\xff\xff\x57\xa0\xc2\x52\xf8\x07\x00\x00")

func mysql000002_create_team_membersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql000002_create_team_membersUpSql,
		"mysql/000002_create_team_members.up.sql",
	)
}

func mysql000002_create_team_membersUpSql() (*asset, error) {
	bytes, err := mysql000002_create_team_membersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/000002_create_team_members.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000001_create_teamsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd0\xcd\xaa\xc3\x20\x10\x86\xe1\xbd\x57\x31\xf7\xe1\x2a\xe7\xc4\x42\x20\x4d\x4a\x62\x21\x3b\x11\x1d\xe8\x80\xd1\x10\xed\xcf\xe5\x97\xc4\x45\xbb\x8b\x5d\xfb\x7c\xf2\x32\x55\x2b\xc5\x00\xb2\xfa\x6b\x05\x24\xd4\x73\x84\x7a\xe8\x2f\xf0\xdf\xb7\xd7\x73\x07\xcd\x09\xc4\xd4\x8c\x72\x04\xed\x5c\x78\x86\x05\x3d\xf9\x07\x25\xe4\xac\x74\xe8\x74\x4c\xdb\x3b\x99\xe0\xef\x8b\xd5\xbf\x6c\x2d\x46\xb3\xd2\x92\x28\x78\xce\xd8\x6e\x9a\xae\x16\xd3\x17\x21\xfb\x52\xfb\x17\xca\xeb\x19\xf9\x11\xca\xf5\x8a\xec\xa1\xcc\xad\x4a\xa7\x43\x69\x56\x2c\x94\x16\x1d\x96\xc9\x68\x6e\x38\xe7\xce\x4c\xf3\xb1\x3e\x54\x6e\x8c\xb3\x77\x00\x00\x00\xff\xff\x06\xc6\x0c\xab\xbf\x01\x00\x00")

func postgres000001_create_teamsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000001_create_teamsDownSql,
		"postgres/000001_create_teams.down.sql",
	)
}

func postgres000001_create_teamsDownSql() (*asset, error) {
	bytes, err := postgres000001_create_teamsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000001_create_teams.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000001_create_teamsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\xcb\x6e\xf2\x30\x10\x85\xf7\x79\x8a\x59\x12\xe9\x5f\xf0\xd3\x82\x2a\x65\xe5\x82\xab\x46\x85\xd0\x86\x50\xc1\x2a\x32\xf1\xa8\xb5\xe4\xd8\x11\x71\x2f\xbc\x7d\x45\xec\x40\xc2\x45\x0a\xdb\x73\xec\x6f\x46\x73\x66\xc6\x31\x25\x09\x85\x84\x3c\x4e\x29\x84\x4f\x10\xcd\x13\xa0\xab\x70\x91\x2c\xc0\x20\xcb\x4b\xe8\x79\x00\x00\x82\xc3\x3b\x89\xc7\xcf\x24\xee\x0d\x46\x3e\xbc\xc6\xe1\x8c\xc4\x6b\x78\xa1\xeb\x7f\x95\x9f\x6d\x91\x19\x64\x06\x36\xe2\x43\x28\x63\xc5\xaf\x82\x9f\x8b\x1c\x25\x9e\x8b\xa2\x2c\x24\xdb\x29\x96\xe3\xa1\xce\xe8\xde\xb7\xe6\x65\x95\x63\x99\x6d\x45\x61\x84\x56\xc7\xd6\x86\x43\xe7\x62\xce\x84\x3c\xe8\xff\x07\x0f\x4e\x37\xbb\x02\x2f\x3c\xcf\x74\x5e\x30\x75\xa5\x3e\x93\x52\xff\x20\xe7\x3a\x67\x42\x95\x47\x68\xbf\xdf\x77\x2f\x84\xfa\x16\x06\x1b\x33\xba\x1b\x38\xa7\xcc\x3e\x31\xc7\xf6\xf4\xac\xb3\x8c\xc2\xb7\x25\xed\xed\x4b\xfa\x9e\x1f\x78\x9e\x4b\x22\x8c\x26\x74\x75\x92\x84\xe0\xbf\x69\x95\x46\x5a\x75\x38\x8f\xea\x6c\xaa\xdf\x10\x74\xfb\x6b\xbb\x4c\x05\x6f\x00\xea\xce\xfd\x8e\x0c\x1b\x69\xca\x4c\x83\x51\xc7\xdc\x95\x61\x77\xa5\xcd\xa8\xf7\xa7\x2b\xc3\x6e\x51\x9b\x51\x6f\x56\x57\x86\xcd\xa6\x3d\x8f\x3a\xaf\x7d\x20\x64\x9a\xd0\xd8\x5d\x86\xb5\xc9\x64\x02\xe3\xf9\x74\x39\x8b\x4e\xa0\xd5\x8a\xe8\x02\x95\x9d\x27\x6c\xb4\x96\xc8\x54\x70\x0b\x43\xb2\xd2\xec\x9f\x88\x4c\x2b\x3b\x52\x77\x22\x37\x51\xae\x9d\x45\xe0\xfd\x05\x00\x00\xff\xff\xf3\x15\x4a\x67\xea\x03\x00\x00")

func postgres000001_create_teamsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000001_create_teamsUpSql,
		"postgres/000001_create_teams.up.sql",
	)
}

func postgres000001_create_teamsUpSql() (*asset, error) {
	bytes, err := postgres000001_create_teamsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000001_create_teams.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000002_create_team_membersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x49\x4d\xcc\xcd\x4d\xcd\x4d\x4a\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x4e\xce\x48\xcd\x4d\x2d\x2d\x4e\x2d\xb2\xe6\x22\x47\x67\x62\x4a\x6e\x66\x1e\x79\x5a\xd3\x4b\x53\x8b\x4b\x48\xd5\x9a\x92\x9a\x93\x5a\x92\x9a\x58\x62\xcd\xc5\x05\x56\xe0\xe9\xe7\xe2\x1a\x81\x24\x9f\x99\x52\x11\x8f\x64\x0a\x98\x1d\x9f\x99\x62\x4d\x9c\x6a\x50\x38\x10\xaf\x1a\xe2\x96\x78\x84\x63\x20\x9e\x40\x68\x08\x49\x4d\xcc\xf5\x85\x28\xb6\xe6\x02\x04\x00\x00\xff\xff\x79\x56\x1c\x35\x98\x01\x00\x00")

func postgres000002_create_team_membersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000002_create_team_membersDownSql,
		"postgres/000002_create_team_members.down.sql",
	)
}

func postgres000002_create_team_membersDownSql() (*asset, error) {
	bytes, err := postgres000002_create_team_membersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000002_create_team_members.down.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres000002_create_team_membersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x31\x6b\xf3\x30\x10\x86\x77\xff\x8a\x1b\x2d\xc8\xf4\xf1\x91\xc5\x93\x6a\xab\xd4\x54\x96\x8b\xa2\x94\x64\x32\x72\x75\xa4\x02\xcb\x06\x4b\x81\xfe\xfc\x62\xcb\x29\xc1\x2d\x85\x34\x9b\x38\x1d\xcf\x3d\xaf\x4e\xb9\x64\x54\x31\x50\xf4\x81\x33\x28\x1f\x41\xd4\x0a\xd8\xa1\xdc\xa9\x1d\x04\xd4\xce\xa1\x6b\x71\xf4\x90\x26\x00\x30\x57\xac\x81\x57\x2a\xf3\x27\x2a\xd3\x7f\x5b\x32\xf7\x8b\x3d\xe7\x9b\xb9\xe1\xec\x71\xfc\xb5\x61\x1c\x3a\xf4\x5f\xf7\xdb\xff\x24\x96\x0d\x76\x18\x50\x07\x68\xed\xc9\xf6\x21\x16\x5f\x64\x59\x51\x79\x84\x67\x76\x84\x34\x8e\xde\x2c\x13\x48\x42\xb2\x24\x59\xdc\x4b\x51\xb0\xc3\xca\xdd\x9a\x8f\xe6\xca\x7f\x3e\x37\xd6\x40\x2d\x40\xa1\x76\xd5\x25\x56\xc4\x92\xec\x16\xd6\xa4\xf0\x13\x6b\x51\xbb\x89\x15\x83\x37\x3a\x7c\xa3\x5d\x9e\x64\x0a\x4a\xb9\x62\x72\xd9\xd1\xf5\x56\x68\x51\x40\x5e\xf3\x7d\x25\x56\x63\xfc\xdb\x3b\x3a\x9c\x84\xa0\x1d\x86\x0e\x75\x9f\xfd\x15\xa2\x8d\xb3\xfd\xdd\x94\xd3\x19\x7d\xb8\x83\xb2\xfa\x20\x59\xf2\x19\x00\x00\xff\xff\x00\x64\x8f\x9f\xb8\x02\x00\x00")

func postgres000002_create_team_membersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres000002_create_team_membersUpSql,
		"postgres/000002_create_team_members.up.sql",
	)
}

func postgres000002_create_team_membersUpSql() (*asset, error) {
	bytes, err := postgres000002_create_team_membersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/000002_create_team_members.up.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"mysql/000001_create_teams.down.sql":           mysql000001_create_teamsDownSql,
	"mysql/000001_create_teams.up.sql":             mysql000001_create_teamsUpSql,
	"mysql/000002_create_team_members.down.sql":    mysql000002_create_team_membersDownSql,
	"mysql/000002_create_team_members.up.sql":      mysql000002_create_team_membersUpSql,
	"postgres/000001_create_teams.down.sql":        postgres000001_create_teamsDownSql,
	"postgres/000001_create_teams.up.sql":          postgres000001_create_teamsUpSql,
	"postgres/000002_create_team_members.down.sql": postgres000002_create_team_membersDownSql,
	"postgres/000002_create_team_members.up.sql":   postgres000002_create_team_membersUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"mysql": &bintree{nil, map[string]*bintree{
		"000001_create_teams.down.sql":        &bintree{mysql000001_create_teamsDownSql, map[string]*bintree{}},
		"000001_create_teams.up.sql":          &bintree{mysql000001_create_teamsUpSql, map[string]*bintree{}},
		"000002_create_team_members.down.sql": &bintree{mysql000002_create_team_membersDownSql, map[string]*bintree{}},
		"000002_create_team_members.up.sql":   &bintree{mysql000002_create_team_membersUpSql, map[string]*bintree{}},
	}},
	"postgres": &bintree{nil, map[string]*bintree{
		"000001_create_teams.down.sql":        &bintree{postgres000001_create_teamsDownSql, map[string]*bintree{}},
		"000001_create_teams.up.sql":          &bintree{postgres000001_create_teamsUpSql, map[string]*bintree{}},
		"000002_create_team_members.down.sql": &bintree{postgres000002_create_team_membersDownSql, map[string]*bintree{}},
		"000002_create_team_members.up.sql":   &bintree{postgres000002_create_team_membersUpSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
